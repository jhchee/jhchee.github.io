{"pageProps":{"postData":{"toc":[{"indentLevel":3,"link":"#understanding-the-problem","headerRef":"h_0","title":"Understanding the problem"},{"indentLevel":3,"link":"#working-through-example","headerRef":"h_1","title":"Working through example"},{"indentLevel":3,"link":"#constructing-the-solution","headerRef":"h_2","title":"Constructing the solution"}],"slug":"leetcode-781-rabbits-in-forest","source":{"compiledSource":"\"use strict\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://leetcode.com/problems/rabbits-in-forest/\"\n  }, \"https://leetcode.com/problems/rabbits-in-forest/\")), mdx(\"h3\", {\n    \"id\": \"understanding-the-problem\",\n    \"className\": \"header\",\n    \"header-ref\": \"h_0\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#understanding-the-problem\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Understanding the problem\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We asked n rabbits \\\"How many rabbit have the same color as you?\\\" and collected the answers in an integer array answers.\")), mdx(\"p\", null, \"First, n rabbits does not represent whole rabbit population, otherwise it will be trivial to solve this problem \\uD83D\\uDE05. We can treat the one responding to the question as representative of their color group. Be in mind that the representative from each color group can be more than one, so the same answer can be given by different rabbits but from the same color group.\"), mdx(\"p\", null, \"Tldr; we can derive two important observations:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Rabbit with different answer do not share the same color\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Rabbit with same answer may share the same color\"))), mdx(\"h3\", {\n    \"id\": \"working-through-example\",\n    \"className\": \"header\",\n    \"header-ref\": \"h_1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#working-through-example\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Working through example\"), mdx(\"p\", null, \"You can use this example to understand much of the context:\"), mdx(\"p\", null, \"If we receive more than 3 answers of \\\"2\\\" (three population in total), then this means that there will be at least 2 different colored rabbit group, e.g. answer = \", \"[2,2,2,2]\", \", we group the first three rabbit into one color group and fourth rabbit into a separate color group (therefore 2). \"), mdx(\"p\", null, \"Since this problem statement wants the minimum, this works with \\\"at least\\\" deduction.\"), mdx(\"h3\", {\n    \"id\": \"constructing-the-solution\",\n    \"className\": \"header\",\n    \"header-ref\": \"h_2\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#constructing-the-solution\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"icon icon-link\"\n  })), \"Constructing the solution\"), mdx(\"p\", null, \"We first compute the frequency of each answer. After having the frequency of each answer, we can know the minimum possible number of color group with for that answer. For that we need to understand what does the answer means, answer as entailed in the question description means there are how many rabbits share the same color as the responder. If we include the responder into the calculation, this will portray the number of population in the color group (indicated answer + 1).\"), mdx(\"p\", null, \"The minimum number of color group can be obtained by dividing frequency with number of population. If there's remainder, we simply raising the num of group by 1 (one more group). After obtaining the number of groups, we multiply the number of group with population in the group for number of population that gives the asnwer. Summing these up (compute number for each answer) will help us get the entire population count. \"), mdx(\"pre\", {\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"Solution\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"numRabbits\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"]\"), \" answers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"HashMap\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"text-code-white\"\n  }, \"<\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"\"\n  }, \"Integer\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"text-code-white\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"\"\n  }, \"Integer\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"text-code-white\"\n  }, \">\")), \" hm \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"HashMap\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"text-code-white\"\n  }, \"<\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"text-code-white\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// if we receive more than 3 answers of \\\"2\\\" (three colors in total)\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// then this means that at least 2 different colored rabbit group\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// since this problem statement wants the minimum, this works with \\\"at least\\\" deduction\"), \"\\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// so we compute the frequency of each answer\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"for\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" answer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \":\"), \" answers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n            hm\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"put\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"answer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \",\"), \" hm\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"getOrDefault\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"answer\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"+\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n        \\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" total \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// Observation: rabbit with different answer do not share the same color\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// rabbit with same answer MAY share the same color\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"for\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"Integer\"), \" key\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \":\"), \" hm\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"keySet\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"{\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" freq \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"=\"), \" hm\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-blue\"\n  }, \"get\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"key\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n            \\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" numInGroup \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"=\"), \" key \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"+\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"int\"), \" numGroups \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"=\"), \" freq \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"/\"), \" numInGroup\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n            \\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-gray-400 italic\"\n  }, \"// deduce number of color groups from each answer\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"freq \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"%\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"(\"), \"key\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"+\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"1\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"!=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"0\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \")\"), \" numGroups\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"++\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n            \\n            total \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"+=\"), \" numGroups \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"\"\n  }, \"*\"), \" numInGroup\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n        \\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-purple\"\n  }, \"return\"), \" total\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"text-code-white\"\n  }, \"}\"), \"\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://leetcode.com/problems/rabbits-in-forest/\">https://leetcode.com/problems/rabbits-in-forest/</a></p><h3 id=\"understanding-the-problem\" class=\"header\" header-ref=\"h_0\"><a href=\"#understanding-the-problem\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Understanding the problem</h3><blockquote><p>We asked n rabbits &quot;How many rabbit have the same color as you?&quot; and collected the answers in an integer array answers.</p></blockquote><p>First, n rabbits does not represent whole rabbit population, otherwise it will be trivial to solve this problem 😅. We can treat the one responding to the question as representative of their color group. Be in mind that the representative from each color group can be more than one, so the same answer can be given by different rabbits but from the same color group.</p><p>Tldr; we can derive two important observations:</p><ul><li><p>Rabbit with different answer do not share the same color</p></li><li><p>Rabbit with same answer may share the same color</p></li></ul><h3 id=\"working-through-example\" class=\"header\" header-ref=\"h_1\"><a href=\"#working-through-example\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Working through example</h3><p>You can use this example to understand much of the context:</p><p>If we receive more than 3 answers of &quot;2&quot; (three population in total), then this means that there will be at least 2 different colored rabbit group, e.g. answer = <!-- -->[2,2,2,2]<!-- -->, we group the first three rabbit into one color group and fourth rabbit into a separate color group (therefore 2). </p><p>Since this problem statement wants the minimum, this works with &quot;at least&quot; deduction.</p><h3 id=\"constructing-the-solution\" class=\"header\" header-ref=\"h_2\"><a href=\"#constructing-the-solution\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\"></span></a>Constructing the solution</h3><p>We first compute the frequency of each answer. After having the frequency of each answer, we can know the minimum possible number of color group with for that answer. For that we need to understand what does the answer means, answer as entailed in the question description means there are how many rabbits share the same color as the responder. If we include the responder into the calculation, this will portray the number of population in the color group (indicated answer + 1).</p><p>The minimum number of color group can be obtained by dividing frequency with number of population. If there&#x27;s remainder, we simply raising the num of group by 1 (one more group). After obtaining the number of groups, we multiply the number of group with population in the group for number of population that gives the asnwer. Summing these up (compute number for each answer) will help us get the entire population count. </p><pre class=\"language-java\"><code class=\"language-java\"><span class=\"text-code-purple\">class</span> <span class=\"\">Solution</span> <span class=\"text-code-white\">{</span>\n    <span class=\"text-code-purple\">public</span> <span class=\"text-code-purple\">int</span> <span class=\"text-code-blue\">numRabbits</span><span class=\"text-code-white\">(</span><span class=\"text-code-purple\">int</span><span class=\"text-code-white\">[</span><span class=\"text-code-white\">]</span> answers<span class=\"text-code-white\">)</span> <span class=\"text-code-white\">{</span>\n        \n        <span class=\"\">HashMap</span><span class=\"\"><span class=\"text-code-white\">&lt;</span><span class=\"\">Integer</span><span class=\"text-code-white\">,</span> <span class=\"\">Integer</span><span class=\"text-code-white\">&gt;</span></span> hm <span class=\"\">=</span> <span class=\"text-code-purple\">new</span> <span class=\"\">HashMap</span><span class=\"\"><span class=\"text-code-white\">&lt;</span><span class=\"text-code-white\">&gt;</span></span><span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">;</span>\n        \n        <span class=\"text-gray-400 italic\">// if we receive more than 3 answers of &quot;2&quot; (three colors in total)</span>\n        <span class=\"text-gray-400 italic\">// then this means that at least 2 different colored rabbit group</span>\n        <span class=\"text-gray-400 italic\">// since this problem statement wants the minimum, this works with &quot;at least&quot; deduction</span>\n        \n        <span class=\"text-gray-400 italic\">// so we compute the frequency of each answer</span>\n        <span class=\"text-code-purple\">for</span> <span class=\"text-code-white\">(</span><span class=\"text-code-purple\">int</span> answer<span class=\"\">:</span> answers<span class=\"text-code-white\">)</span> <span class=\"text-code-white\">{</span>\n            hm<span class=\"text-code-white\">.</span><span class=\"text-code-blue\">put</span><span class=\"text-code-white\">(</span>answer<span class=\"text-code-white\">,</span> hm<span class=\"text-code-white\">.</span><span class=\"text-code-blue\">getOrDefault</span><span class=\"text-code-white\">(</span>answer<span class=\"text-code-white\">,</span> <span class=\"\">0</span><span class=\"text-code-white\">)</span> <span class=\"\">+</span> <span class=\"\">1</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">;</span>\n        <span class=\"text-code-white\">}</span>\n        \n        \n        <span class=\"text-code-purple\">int</span> total <span class=\"\">=</span> <span class=\"\">0</span><span class=\"text-code-white\">;</span>\n        \n        <span class=\"text-gray-400 italic\">// Observation: rabbit with different answer do not share the same color</span>\n        <span class=\"text-gray-400 italic\">// rabbit with same answer MAY share the same color</span>\n        <span class=\"text-code-purple\">for</span> <span class=\"text-code-white\">(</span><span class=\"\">Integer</span> key<span class=\"\">:</span> hm<span class=\"text-code-white\">.</span><span class=\"text-code-blue\">keySet</span><span class=\"text-code-white\">(</span><span class=\"text-code-white\">)</span><span class=\"text-code-white\">)</span> <span class=\"text-code-white\">{</span>\n            <span class=\"text-code-purple\">int</span> freq <span class=\"\">=</span> hm<span class=\"text-code-white\">.</span><span class=\"text-code-blue\">get</span><span class=\"text-code-white\">(</span>key<span class=\"text-code-white\">)</span><span class=\"text-code-white\">;</span>\n            \n            <span class=\"text-code-purple\">int</span> numInGroup <span class=\"\">=</span> key <span class=\"\">+</span> <span class=\"\">1</span><span class=\"text-code-white\">;</span>\n            <span class=\"text-code-purple\">int</span> numGroups <span class=\"\">=</span> freq <span class=\"\">/</span> numInGroup<span class=\"text-code-white\">;</span>\n            \n            <span class=\"text-gray-400 italic\">// deduce number of color groups from each answer</span>\n            <span class=\"text-code-purple\">if</span> <span class=\"text-code-white\">(</span>freq <span class=\"\">%</span> <span class=\"text-code-white\">(</span>key<span class=\"\">+</span><span class=\"\">1</span><span class=\"text-code-white\">)</span> <span class=\"\">!=</span> <span class=\"\">0</span><span class=\"text-code-white\">)</span> numGroups<span class=\"\">++</span><span class=\"text-code-white\">;</span>\n            \n            total <span class=\"\">+=</span> numGroups <span class=\"\">*</span> numInGroup<span class=\"text-code-white\">;</span>\n        <span class=\"text-code-white\">}</span>\n        \n        <span class=\"text-code-purple\">return</span> total<span class=\"text-code-white\">;</span>\n    <span class=\"text-code-white\">}</span>\n<span class=\"text-code-white\">}</span>\n</code></pre>","scope":{}},"wordCount":509,"readingTime":3,"title":"Leetcode 781: Rabbits in Forest","date":"2021-07-07","description":"Solving leetcode #781","tags":["Leetcode","Greedy","Math"]}},"__N_SSG":true}